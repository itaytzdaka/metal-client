name: Build & Deploy (SSH to cPanel)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: deploy-metal-org
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: metal-org

    env:
      SSH_USER: ${{ secrets.SSH_USER }}
      SSH_HOST: ${{ secrets.SSH_HOST }}
      SSH_PORT: ${{ secrets.SSH_PORT }}
      DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
      BUILD_DIR: dist
      NODE_VERSION: '20'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install deps
        run: npm ci

      - name: Build
        run: npm run build

      # Package build into a tarball for faster/safer upload
      - name: Create tarball
        run: |
          tar -C $BUILD_DIR -czf web_build.tar.gz .

      - name: Prepare SSH key & known_hosts
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          printf '%s\n' "$SSH_PRIVATE_KEY" > ~/.ssh/id_deploy
          chmod 600 ~/.ssh/id_deploy
          touch ~/.ssh/known_hosts
          ssh-keyscan -4 -T 20 -t rsa,ecdsa,ed25519 -p "${SSH_PORT}" "${SSH_HOST}" >> ~/.ssh/known_hosts 2>/dev/null || echo "WARN: ssh-keyscan failed; continuing"

      - name: Ensure remote path exists
        run: |
          ssh -p "${SSH_PORT}" -i ~/.ssh/id_deploy \
            -o PreferredAuthentications=publickey \
            -o IdentitiesOnly=yes \
            -o ConnectTimeout=10 \
            -o ServerAliveInterval=15 \
            -o ServerAliveCountMax=2 \
            "${SSH_USER}@${SSH_HOST}" "
              mkdir -p '${DEPLOY_PATH}' &&
              echo '--- Contents of ${DEPLOY_PATH} ---' &&
              ls -la '${DEPLOY_PATH}'
          "

      - name: Smoke test connectivity
        run: |
          # בדיקה קצרה שלא נתקע; אם נכשל - עצור בנקודה ברורה
          ssh -o ConnectTimeout=10 -o StrictHostKeyChecking=yes \
              -i ~/.ssh/id_deploy -p "${{ secrets.SSH_PORT }}" \
              "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" "echo ok"


      - name: Deploy with rsync (override existing files)
        run: |
          rsync -az \
            -e "ssh -p ${SSH_PORT} -i ~/.ssh/id_deploy -o StrictHostKeyChecking=yes -o PreferredAuthentications=publickey -o IdentitiesOnly=yes -o ConnectTimeout=20" \
            "${BUILD_DIR}/" "${SSH_USER}@${SSH_HOST}:${DEPLOY_PATH}/"